#!/bin/sh

# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2011-present Alex@ELEC (http://alexelec.in.ua)

CH_NAME="$@"
WRK_DIR=`dirname $0`
CH_FILE="$WRK_DIR/tvh-channels.list"
CH_TRANSCODE="$WRK_DIR/tvh-transcode.list"
CH_VLCPLAY="$WRK_DIR/tvh-vlcplay.list"
ID_FILE="$WRK_DIR/device.id"
IS_NAME=''
IS_VLC=''
ACE_URL=''

LOG_VLC="quiet"
LOG_FFMPEG="quiet"
STREAM_PTV="VLC"
CACHE_PTV=3
IP4_TIME=5000
ENDODE_ARG="-vf scale=-1:720"
USER_AGENT="'SmartSDK'"
#USER_AGENT="'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0'"

CONFIG_LOG="$WRK_DIR/stream-tvh.conf"
[ -f "$CONFIG_LOG" ] && . $CONFIG_LOG

CONFIG_FILE="/storage/.cache/services/ptv.conf"
[ -f "$CONFIG_FILE" ] && . $CONFIG_FILE

play_empty (){
  echo "*** IPTV stream --- Not found URL for ---: [$CH_NAME] ***" >&2
  URL="${WRK_DIR}/../logo/empty-stream.mp4"
  /usr/bin/ffmpeg -v quiet -hide_banner -i "$URL" -c copy -f mpegts pipe:1
  sleep 3
  exit 3
}

FIND_CH_NAME=`echo "$CH_NAME" | sed 's|\[|\\\[|g; s|\]|\\\]|g'`
URL_PTV=`grep -m 1 "^$FIND_CH_NAME #" $CH_FILE | awk -F\\# '{print $2}' | sed 's/^[ \t]*//; s/[ \t]*$//'`
[ -z "$URL_PTV" ] && play_empty

URL=`curl -s $URL_PTV`
[ -z "$URL" ] && play_empty

EMPTY_URL=`echo $URL | grep '/logo/empty-stream.mp4'`
[ -n "$EMPTY_URL" ] && play_empty

if [ ! -f "/run/lock/start.tvip" ]; then
  [ -f "$CH_TRANSCODE" ] && IS_NAME=`grep -m 1 "^$CH_NAME #" $CH_TRANSCODE | awk -F\\# '{print $1}' | sed 's/^[ \t]*//; s/[ \t]*$//'`
fi

[ "$FF_TRANSCODE" == "low" ] && ENDODE_ARG="-vf scale=iw/2:ih/2"

DUNE_URL=`echo $URL | grep 'hls.peers.tv'`
[ -n "$DUNE_URL" ] && USER_AGENT="'DuneHD/1.0.3'"

pkill -9 youtv-send

YOUTV_URL=`echo $URL | grep 'stream.youtv.com.ua'`
if [ -n "$YOUTV_URL" -a -f "$ID_FILE" ]; then
  DEV_ID=`cat $ID_FILE`
  LAST_PART=`basename $URL`
  STAT_URL=`echo "$URL" | sed "s|${LAST_PART}$|stats|"`
  $WRK_DIR/youtv-send "$STAT_URL" "$DEV_ID" &
fi

if [ "$STREAM_PTV" == "VLC" ]; then
  if [ -f "/run/lock/start.tvip" ]; then
    STREAM_PTV="FFmpeg"
  elif [ "$HYBRID_MODE" == "yes" ]; then
    ACE_URL=`echo $URL | grep '/ace/getstream'`
    if [ -z "$ACE_URL" ]; then
      [ -f "$CH_VLCPLAY" ] && IS_VLC=`grep -m 1 "^$CH_NAME #" $CH_VLCPLAY | awk -F\\# '{print $1}' | sed 's/^[ \t]*//; s/[ \t]*$//'`
      [ -z "$IS_VLC" ] && STREAM_PTV="FFmpeg"
    fi
  fi
fi

echo "*** IPTV stream play --- $CH_NAME --- [$URL] ***" >&2

if [ "$STREAM_PTV" == "VLC" ]; then

  if [ "$LOG_VLC" == "info" ]; then
    DEBUG="-vvv"
  else
    DEBUG="--quiet"
  fi

  BUF_TIME=$(expr $CACHE_PTV \* 1000)

  if [ -n "$IS_NAME" ]; then
      echo "*** IPTV stream mode --- VLC+Transcode --- (Cache time: 2 sec.)***" >&2
      /usr/bin/cvlc $DEBUG --ipv4-timeout=$IP4_TIME --network-caching=2000 \
                           --no-drop-late-frames --no-skip-frames \
                           "$URL" :http-user-agent="$USER_AGENT" \
                           --sout '#std{mux=ts,access=file,dst=-}' | \
      /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -i - -max_muxing_queue_size 9999 -c:v mpeg2video -q:v 3 $ENDODE_ARG -c:a copy -c:s copy -ignore_unknown -map 0 -f mpegts pipe:1
  else
      echo "*** IPTV stream mode --- VLC --- (Cache time: $CACHE_PTV sec.)***" >&2
      /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -user_agent $USER_AGENT -i "$URL" \
                           -flags nobuffer -flags low_delay -avioflags direct -strict experimental -max_muxing_queue_size 9999 \
                           -c copy -ignore_unknown -map 0 -f mpegts -f mpegts pipe:1 | \
      /usr/bin/cvlc $DEBUG --network-caching=$BUF_TIME \
                           --no-drop-late-frames --no-skip-frames - \
                           --sout '#std{mux=ts,access=file,dst=-}'
  fi

else

  if [ -n "$IS_NAME" ]; then
      echo "*** IPTV stream mode --- FFmpeg+Transcode --- ***" >&2
      /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -user_agent $USER_AGENT -i "$URL" -max_muxing_queue_size 9999 -c:v mpeg2video -q:v 3 $ENDODE_ARG -c:a copy -c:s copy -ignore_unknown -map 0 -f mpegts pipe:1
  else
      echo "*** IPTV stream mode --- FFmpeg --- ***" >&2
      /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -user_agent $USER_AGENT -i "$URL" -flags nobuffer -flags low_delay -avioflags direct -strict experimental -max_muxing_queue_size 9999 -c copy -ignore_unknown -map 0 -f mpegts pipe:1
  fi

fi
