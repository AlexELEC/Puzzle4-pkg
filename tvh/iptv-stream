#!/bin/sh

# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2011-present Alex@ELEC (http://alexelec.in.ua)

CH_NAME="$@"
WRK_DIR="/storage/.config/puzzle/tvh"
CH_FILE="$WRK_DIR/tvh-channels.list"
CH_TRANSCODE="$WRK_DIR/tvh-transcode.list"
IS_NAME=''

LOG_VLC="quiet"
LOG_FFMPEG="quiet"
STREAM_PTV="VLC"
CACHE_PTV=3
IP4_TIME=5000
ENDODE_ARG=""
TVIP="false"
USER_AGENT="'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'"

CONFIG_LOG="$WRK_DIR/stream-tvh.conf"
[ -f "$CONFIG_LOG" ] && . $CONFIG_LOG

CONFIG_FILE="/storage/.cache/services/ptv.conf"
[ -f "$CONFIG_FILE" ] && . $CONFIG_FILE

play_empty (){
  echo "*** IPTV stream --- Not found URL for ---: [$CH_NAME] ***" >&2
  URL="/storage/.config/puzzle/logo/empty-stream.mp4"
  /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -i "$URL" -c copy -f mpegts pipe:1
  sleep 5
  exit 3
}

FIND_CH_NAME=`echo "$CH_NAME" | sed 's|\[|\\\[|g; s|\]|\\\]|g'`
URL=`grep -m 1 "^$FIND_CH_NAME #" $CH_FILE | awk -F\\# '{print $2}' | sed 's/^[ \t]*//; s/[ \t]*$//'`

if [ -z "$URL" ]; then
  echo "*** IPTV link --- empty URL for ---: [$CH_NAME] ***" >&2
  URL="/storage/.config/puzzle/logo/empty-stream.mp4"
  /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -i "$URL" -c copy -f mpegts pipe:1
  sleep 5
  exit 3
fi

[ -f "$CH_TRANSCODE" ] && IS_NAME=`grep -m 1 "^$CH_NAME #" $CH_TRANSCODE | awk -F\\# '{print $1}' | sed 's/^[ \t]*//; s/[ \t]*$//'`
[ "$FF_TRANSCODE" == "low" ] && ENDODE_ARG="-vf scale=iw/2:ih/2"
[ -f "/run/lock/start.tvip" ] && TVIP="true"

if [ -f "/usr/bin/cvlc" -a "$STREAM_PTV" == "VLC" ]; then
  if [ "$LOG_VLC" == "info" ]; then
    DEBUG="-vvv"
  else
    DEBUG="--quiet"
  fi
  BUF_TIME=$(expr $CACHE_PTV \* 1000)

  [ "$TVIP" == "true" ] && IS_NAME=""
  if [ -n "$IS_NAME" ]; then
      echo "*** IPTV stream --- VLC+Transcode --- mode: [$CH_NAME] - [$URL] (Cache time: 2 sec.)***" >&2
      URL=`curl -s $URL`
      if [ "$URL" != "" ]; then
        echo "*** IPTV stream --- Real URL ---: [$URL] ***" >&2
        /usr/bin/cvlc $DEBUG --ipv4-timeout=$IP4_TIME --network-caching=2000 \
                             --no-drop-late-frames --no-skip-frames \
                             "$URL" :http-user-agent="$USER_AGENT" \
                             --sout '#std{mux=ts,access=file,dst=-}' | \
        /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -i - -max_muxing_queue_size 9999 -c:v mpeg2video -q:v 1 $ENDODE_ARG -c:a copy -map 0 -f mpegts pipe:1
      else
        play_empty
      fi
  else
      echo "*** IPTV stream --- VLC --- mode: [$CH_NAME] - [$URL] (Cache time: $CACHE_PTV sec.)***" >&2
      URL=`curl -s $URL`
      if [ "$URL" != "" ]; then
        echo "*** IPTV stream --- Real URL ---: [$URL] ***" >&2
        if [ "$TVIP" != "true" ]; then
          /usr/bin/cvlc $DEBUG --ipv4-timeout=$IP4_TIME --network-caching=$BUF_TIME \
                               --no-drop-late-frames --no-skip-frames \
                               "$URL" :http-user-agent="$USER_AGENT" \
                               --sout '#std{mux=ts,access=file,dst=-}'
        else
          echo "*** IPTV stream --- TVIP mode ---: add FFmpeg ***" >&2
          /usr/bin/cvlc $DEBUG --ipv4-timeout=$IP4_TIME --network-caching=$BUF_TIME \
                               --no-drop-late-frames --no-skip-frames \
                               "$URL" :http-user-agent="$USER_AGENT" \
                               --sout '#std{mux=ts,access=file,dst=-}' | \
          /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -i - -c copy -analyzeduration 32 -probesize 32 -map 0 -f mpegts pipe:1
        fi
      else
        play_empty
      fi
  fi
else
  [ "$TVIP" == "true" ] && IS_NAME=""
  if [ -n "$IS_NAME" ]; then
    echo "*** IPTV stream --- FFmpeg+Transcode --- mode: [$CH_NAME] - [$URL] ***" >&2
    URL=`curl -s $URL`
    if [ "$URL" != "" ]; then
      echo "*** IPTV stream --- Real URL ---: [$URL] ***" >&2
      /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -i "$URL" -max_muxing_queue_size 9999 -c:v mpeg2video -q:v 1 $ENDODE_ARG -c:a copy -map 0 -f mpegts pipe:1
    else
      play_empty
    fi
  else
    echo "*** IPTV stream --- FFmpeg --- mode: [$CH_NAME] - [$URL] ***" >&2
    URL=`curl -s $URL`
    if [ "$URL" != "" ]; then
      echo "*** IPTV stream --- Real URL ---: [$URL] ***" >&2
      if [ "$TVIP" != "true" ]; then
        /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -reconnect 1 -i "$URL" -max_muxing_queue_size 9999 -c copy -analyzeduration 0 -probesize 32 -map 0 -f mpegts pipe:1
      else
        echo "*** IPTV stream --- to TVIP --- ***" >&2
        /usr/bin/ffmpeg -v $LOG_FFMPEG -hide_banner -reconnect 1 -i "$URL" -c copy -analyzeduration 32 -probesize 32 -map 0 -f mpegts pipe:1
      fi
    else
      play_empty
    fi
  fi
fi
fi
